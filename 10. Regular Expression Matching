class Solution {
    public boolean isMatch(String s, String p) {
        if(s == null || p == null) return false;
        boolean[][] dp = new boolean[s.length()+1][p.length()+1];
        dp[0][0] = true;
        for(int j = 2; j <= p.length(); j++)
            if(p.charAt(j-1) == '*' && dp[0][j-2] == true)
                dp[0][j] = true;
        for(int i = 1; i < dp.length; i++){
            for(int j = 1; j < dp[0].length; j++){
                if(p.charAt(j-1) == s.charAt(i-1)) dp[i][j] = dp[i][j] || dp[i-1][j-1];
                else if(p.charAt(j-1) == '.') dp[i][j] = dp[i][j] || dp[i-1][j-1];
                else if(j >= 2 && p.charAt(j-1) == '*'){
                    if(p.charAt(j-2) != '.' && p.charAt(j-2) != s.charAt(i-1)) dp[i][j] = dp[i][j] || dp[i][j-2];
                    else if(p.charAt(j-2) == s.charAt(i-1) || p.charAt(j-2) == '.')
                        dp[i][j] = dp[i][j] || dp[i][j-2] || dp[i-1][j-2] || dp[i-1][j];
                }
            }
        }
        //print(dp);
        return dp[s.length()][p.length()];
    }
    private void print(boolean[][] dp){
        for(int i = 0; i < dp.length; i++){
            for(int j = 0; j < dp[0].length; j++){
                System.out.print(dp[i][j] + " ");
            }
            System.out.println();
        }
    }
}
//1. #######a   #####a  M[i][j] = M[i-1][j-1]
//2. #######a   #####.  M[i][j] = M[i-1][j-1]
//3. #######a   ###b*   M[i][j] = M[i][j-2]
//4. #######a   ###.* or ###a*  M[i][j] = M[i][j-2] || M[i-1][j-2] || M[i-1][j]
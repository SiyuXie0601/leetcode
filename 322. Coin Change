class Solution {
    public int coinChange(int[] coins, int amount) {
        if(amount == 0) return 0;
        int[] dp = new int[amount + 1];
        dp[0] = 0;
        for(int j = 0; j < coins.length; j++){
            if(coins[j] <= amount)dp[coins[j]] = 1;
        }
        for(int i = 1; i <= amount; i++){
            for(int j = 0; j < coins.length; j++){
                if(i - coins[j] >= 0 && dp[i - coins[j]] > 0){
                    dp[i] = dp[i] == 0 ? dp[i - coins[j]]+1 : Math.min(dp[i], dp[i - coins[j]]+1);
                }
            }
        }
        //print(dp);
        return dp[amount] == 0 ? -1 : dp[amount];
    }
    private void print(int[] dp){
        for(int i = 0; i < dp.length; i++)
            System.out.println(dp[i]);
    }
}
//only if dp[i - coins[j]] > 0 could we update dp[i]
//find smallest amount all possibilities: assign first element first
    public int largestRectangleArea(int[] heights) {
        Stack<Integer> stack = new Stack<>();
        stack.push(-1);
        int maxArea = 0, i;
        for(i = 0; i < heights.length; i++){
            while(stack.peek() != -1 && heights[stack.peek()] > heights[i]){
                    maxArea = Math.max(maxArea, heights[stack.pop()] * (i - stack.peek() - 1));
            }
            stack.push(i);
        }
        while(stack.peek() != -1){
            maxArea = Math.max(maxArea, heights[stack.pop()] * (i - stack.peek() - 1));
        }
        return maxArea;
    }
    //elements in stack are in increasing order
    //pop until elements in stack are smaller than current i, width of rectangle is i - stack.peek() - 1
ListNode sortList(ListNode head){
  ListNode tail = head;
  while(tail.next != null) tail = tail.next;
  return helper(head, tail);
}

ListNode helper(ListNode head, ListNode tail){
  if(head == tail) return head;
  ListNode slow = head, fast = head;
  while(fast.next != tail && fast.next.next != tail){
    slow = slow.next;
    fast = fast.next.next;
  }
  ListNode l1 = helper(head, slow);
  ListNode l2 = helper(slow.next, tail);
  return merge(l1, l2);
}

ListNode merge(ListNode l1, ListNode l2){
  ListNode head = new ListNode(0), p = head;
  
  while(l1 != null && l2 != null){
    if(l1.val < l2.val){
      p.next = l1;
      l1 = l1.next;
      p = p.next;
    }
    else{
      p.next = l2;
      l2 = l2.next;
      p = p.next;
    }
  }
  if(l1 != null) p.next = l1;
  if(l2 != null) p.next = l2;
  return head.next;
}